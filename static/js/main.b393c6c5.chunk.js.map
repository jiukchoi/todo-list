{"version":3,"sources":["utils/dateService.ts","components/layout/GNB.tsx","components/layout/Layout.tsx","utils/constants/localStorageKey.ts","utils/contexts/todo.ts","utils/constants/todo.ts","pages/header/TodoHeader.tsx","utils/localStorageService.ts","pages/list/col/item/TodoItem.tsx","pages/list/col/TodoCol.tsx","pages/list/TodoList.tsx","pages/TodoContainer.tsx","utils/styles/globalStyles.tsx","App.tsx","index.tsx"],"names":["WEEK","GNB","date","Date","years","getFullYear","months","String","getMonth","dates","getDate","days","getDay","UpperWrapper","Wrapper","Title","DateBar","styled","div","h1","span","Layout","children","LS_KEY","TodoContext","createContext","todo","id","task","status","todos","setTodo","setTodos","STATUS","TodoHeader","useContext","validateTodo","trim","useEffect","key","data","localStorage","setItem","JSON","stringify","onSubmit","e","preventDefault","newTodos","now","Header","HeaderInput","type","placeholder","autoFocus","onChange","target","value","HeaderBtn","AddIcon","src","header","input","button","img","TodoItem","draggable","onDragStart","dataTransfer","setData","Task","DeleteIcon","onClick","filter","Number","currentTarget","TodoCol","title","index","useState","focusedCol","setFocusedCol","onDragOver","onDrop","getData","newTodo","map","onDragLeave","Body","main","TodoList","TodoListWrapper","TodoListColArr","i","TodoContainer","getItem","parse","Provider","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MASMA,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,U,OCQ7BC,EAbO,WACpB,IAAMC,EDLe,WACrB,IAAMA,EAAO,IAAIC,KACXC,EAAQF,EAAKG,cACbC,EAASC,OAAOL,EAAKM,WAAa,GAClCC,EAAQF,OAAOL,EAAKQ,WACpBC,EAAOX,EAAKE,EAAKU,UACvB,MAAM,GAAN,OAAUR,EAAV,kBAAoBE,EAApB,kBAA+BG,EAA/B,kBAAyCE,EAAzC,gBCDaD,GAEb,OACE,cAACG,EAAD,UACE,eAACC,EAAD,WACE,cAACC,EAAD,yBACA,cAACC,EAAD,UAAUd,UAQZW,EAAeI,IAAOC,IAAV,iHAKZJ,EAAUG,IAAOC,IAAV,kJAOPH,EAAQE,IAAOE,GAAV,gDAGLH,EAAUC,IAAOG,KAAV,gDCrBEC,EATU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACCA,MAODR,EAAUG,IAAOC,IAAV,0B,OCfAK,EAAS,QCUTC,EAAcC,wBAA4B,CACrDC,KAAM,CAAEC,GAAI,EAAGC,KAAM,GAAIC,OAAQ,IACjCC,MAAO,GACPC,QAAS,aACTC,SAAU,e,cCdCC,EACE,cADFA,EAEE,cAFFA,EAGL,OCyDOC,EApDc,WAAO,IAAD,EACUC,qBAAWX,GAA9CE,EADyB,EACzBA,KAAMK,EADmB,EACnBA,QAASD,EADU,EACVA,MAAOE,EADG,EACHA,SAsBxBI,EAAe,SAACV,GACpB,MAAoB,KAAhBA,EAAKW,QAUX,OAJAC,qBAAU,WC/BW,IAACC,EAAaC,EAAbD,EDgCZhB,EChCyBiB,EDgCjBV,EC/BlBW,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,MDgCtC,CAACV,IAGF,sBAAMe,SAzBS,SAACC,GAEhB,GADAA,EAAEC,mBACErB,GAASU,EAAaV,EAAKE,QAC3BF,EAAM,CACR,IAAMsB,EAAiB,sBAClBlB,GADkB,4BAEhBJ,GAFgB,IAEVC,GAAIxB,KAAK8C,MAAOpB,OAAQI,MAErCD,EAASgB,GACTjB,EAAQ,2BAAKL,GAAN,IAAYE,KAAM,QAgB3B,SACE,eAACsB,EAAD,WACE,cAACC,EAAD,CACEC,KAAK,OACLC,YAAY,4DACZC,WAAS,EACTC,SAtCS,SAACT,GAChBf,EAAQ,2BACHL,GADE,IAELE,KAAMkB,EAAEU,OAAOC,UAoCXA,MAAK,OAAE/B,QAAF,IAAEA,OAAF,EAAEA,EAAME,OAEf,cAAC8B,EAAD,CAAWN,KAAK,SAAhB,SACE,cAACO,EAAD,CAASC,IAAI,yBASjBV,EAASjC,IAAO4C,OAAV,sEAKNV,EAAclC,IAAO6C,MAAV,+OAaXJ,EAAYzC,IAAO8C,OAAV,qHAOTJ,EAAU1C,IAAO+C,IAAV,4CEpDEC,EA1BuB,SAAC,GAAc,IAAZvC,EAAW,EAAXA,KAAW,EACtBS,qBAAWX,GAA/BM,EAD0C,EAC1CA,MAAOE,EADmC,EACnCA,SAaf,OACE,eAAC,EAAD,CAASkC,WAAS,EAACC,YAZD,SAACrB,GACnBA,EAAEsB,aAAaC,QAAQ,OAAQ9D,OAAOmB,EAAKC,MAWEA,GAAIpB,OAAOmB,EAAKC,IAA7D,UACE,cAAC2C,EAAD,UAAO5C,EAAKE,OACZ,cAAC2C,EAAD,CACE5C,GAAIpB,OAAOmB,EAAKC,IAChBiC,IAAI,kBACJY,QAbgB,SAAC1B,GACrB,IAAME,EAAWlB,EAAM2C,QACrB,SAAC/C,GAAD,OAAUA,EAAKC,KAAO+C,OAAO5B,EAAE6B,cAAchD,OAE/CK,EAASgB,UAiBPlC,EAAUG,IAAOC,IAAV,0TAgBPoD,EAAOrD,IAAOC,IAAV,qGAMJqD,EAAatD,IAAO+C,IAAV,gECMDY,GArDqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAAY,EAC5B3C,qBAAWX,GAA/BM,EADgD,EAChDA,MAAOE,EADyC,EACzCA,SADyC,EAEpB+C,mBAAiB,IAFG,mBAEjDC,EAFiD,KAErCC,EAFqC,KA0BxD,OAJA3C,qBAAU,WACR2C,EAAc,MACb,CAACnD,IAGF,eAAC,GAAD,CACEH,GAAIkD,EACJK,WAzBe,SAACpC,GAClBA,EAAEC,iBACFkC,EAAcnC,EAAE6B,cAAchD,KAwB5BwD,OAjBW,SAACrC,GACd,IAAMnB,EAAamB,EAAEsB,aAAagB,QAAQ,QACpCC,EAAiB,YAAIvD,GACxB2C,QAAO,SAAC/C,GAAD,OAAUA,EAAKC,KAAO+C,OAAO/C,MACpC2D,KAAI,SAAC5D,GAAD,OAAe,2BAAQA,GAAR,IAAcG,OAAQgD,OAAU,GAChD7B,EAAWlB,EAAM2C,QAAO,SAAC/C,GAAD,OAAUA,EAAKC,KAAO0D,EAAQ1D,MAC5DK,EAAS,GAAD,mBAAKgB,GAAL,gBAAoBqC,OAY1BE,YAtBgB,SAACzC,GACnBmC,EAAc,KAsBZD,WAAYA,EALd,UAOE,cAAC,GAAD,UAASH,IACT,eAACW,GAAD,WACa,IAAVV,GACChD,EACG2C,QAAO,SAAC/C,GAAD,OAAUA,EAAKG,SAAWI,KACjCqD,KAAI,SAAC5D,GAAD,OAAU,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,OAC5B,IAAVmD,GACChD,EACG2C,QAAO,SAAC/C,GAAD,OAAUA,EAAKG,SAAWI,KACjCqD,KAAI,SAAC5D,GAAD,OAAU,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,OAC5B,IAAVmD,GACChD,EACG2C,QAAO,SAAC/C,GAAD,OAAUA,EAAKG,SAAWI,KACjCqD,KAAI,SAAC5D,GAAD,OAAU,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,cAQzCb,GAAUG,IAAOC,IAAV,0LAOA,qBAAG8D,aAAH,EAAerD,GAA8B,GAAM,KAG1DuB,GAASjC,IAAO4C,OAAV,8FAMN2B,GAAOvE,IAAOwE,KAAV,0BCpEKC,GAVY,WACzB,OACE,cAACC,GAAD,UACGC,GAAeN,KAAI,SAACT,EAAOgB,GAAR,OAClB,cAAC,GAAD,CAAqBhB,MAAOA,EAAOC,MAAOe,GAA5BhB,SAQhBe,GAAiB,CAAC3D,EAAoBA,EAAoBA,GAE1D0D,GAAkB1E,IAAOwE,KAAV,iFCUNK,GApBiB,WAAO,IAAD,EACZf,mBAAgB,CACtCpD,GAAI,EACJC,KAAM,GACNC,OAAQ,KAJ0B,mBAC7BH,EAD6B,KACvBK,EADuB,OAMVgD,mBJbL,SAACxC,GACtB,IAAMC,EAAsBC,aAAasD,QAAQxD,GACjD,OAAOC,GAAQG,KAAKqD,MAAMxD,GIWuBuD,CAAQxE,IANrB,mBAM7BO,EAN6B,KAMtBE,EANsB,KAQpC,OACE,cAACR,EAAYyE,SAAb,CAAsBxC,MAAO,CAAE/B,OAAMK,UAASD,QAAOE,YAArD,SACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,YASJnB,GAAeI,IAAOC,IAAV,iGAMZJ,GAAUG,IAAOC,IAAV,mECvBEgF,GAZKC,YAAH,+ICWFC,GATH,WACV,OACE,eAAC,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b393c6c5.chunk.js","sourcesContent":["export const getDate = (): string => {\n  const date = new Date();\n  const years = date.getFullYear();\n  const months = String(date.getMonth() + 1);\n  const dates = String(date.getDate());\n  const days = WEEK[date.getDay()];\n  return `${years}년 ${months}월 ${dates}일 ${days}요일`;\n};\n\nconst WEEK = ['일', '월', '화', '수', '목', '금', '토'];\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getDate } from '../../utils/dateService';\n\nconst GNB: React.FC = () => {\n  const date = getDate();\n\n  return (\n    <UpperWrapper>\n      <Wrapper>\n        <Title>To Do List</Title>\n        <DateBar>{date}</DateBar>\n      </Wrapper>\n    </UpperWrapper>\n  );\n};\n\nexport default GNB;\n\nconst UpperWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  border-bottom: 1px solid #00000010;\n`;\nconst Wrapper = styled.div`\n  width: 1440px;\n  display: flex;\n  padding: 15px 30px;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst Title = styled.h1`\n  font-size: 50px;\n`;\nconst DateBar = styled.span`\n  font-size: 30px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GNB from './GNB';\n\nconst Layout: React.FC = ({ children }) => {\n  return (\n    <Wrapper>\n      <GNB />\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default Layout;\n\nconst Wrapper = styled.div``;\n","export const LS_KEY = 'todos';\n","import { createContext } from 'react';\nimport { ITodo } from '../types/todo';\n\ninterface ITodoContext {\n  todo: ITodo;\n  setTodo: (todo: ITodo) => void;\n  todos: ITodo[] | [];\n  setTodos: (todos: ITodo[]) => void;\n}\n\nexport const TodoContext = createContext<ITodoContext>({\n  todo: { id: 0, task: '', status: '' },\n  todos: [],\n  setTodo: () => {},\n  setTodos: () => {},\n});\n","export const STATUS = {\n  NOT_STARTED: 'Not Started',\n  IN_PROGRESS: 'In Progress',\n  DONE: 'Done',\n};\n","import React, { useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { LS_KEY } from '../../utils/constants/localStorageKey';\nimport { STATUS } from '../../utils/constants/todo';\nimport { TodoContext } from '../../utils/contexts/todo';\nimport { setItem } from '../../utils/localStorageService';\nimport { ITodo } from '../../utils/types/todo';\n\nconst TodoHeader: React.FC = () => {\n  const { todo, setTodo, todos, setTodos } = useContext(TodoContext);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTodo({\n      ...todo,\n      task: e.target.value,\n    });\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (todo && !validateTodo(todo.task)) return;\n    if (todo) {\n      const newTodos: ITodo[] = [\n        ...todos,\n        { ...todo, id: Date.now(), status: STATUS.NOT_STARTED },\n      ];\n      setTodos(newTodos);\n      setTodo({ ...todo, task: '' });\n    }\n  };\n\n  const validateTodo = (todo: string): boolean => {\n    if (todo.trim() === '') {\n      return false;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    setItem(LS_KEY, todos);\n  }, [todos]);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Header>\n        <HeaderInput\n          type=\"text\"\n          placeholder=\"할 일을 입력해주세요.\"\n          autoFocus\n          onChange={onChange}\n          value={todo?.task}\n        />\n        <HeaderBtn type=\"submit\">\n          <AddIcon src=\"/img/add.png\" />\n        </HeaderBtn>\n      </Header>\n    </form>\n  );\n};\n\nexport default TodoHeader;\n\nconst Header = styled.header`\n  display: flex;\n  margin-bottom: 50px;\n`;\n\nconst HeaderInput = styled.input`\n  width: 100%;\n  font-size: 33px;\n  padding: 20px 30px;\n  border-radius: 10px;\n  margin-right: 15px;\n  border: 1px solid rgba(200, 200, 200);\n  ::placeholder {\n    color: #bdbdbd;\n  }\n  outline: none;\n`;\n\nconst HeaderBtn = styled.button`\n  width: 200px;\n  border: none;\n  background-color: darkgray;\n  border-radius: 10px;\n`;\n\nconst AddIcon = styled.img`\n  width: 65px;\n`;\n","import { ITodo } from './types/todo';\n\nexport const getItem = (key: string): ITodo[] | [] => {\n  const data: string | null = localStorage.getItem(key);\n  return data && JSON.parse(data);\n};\n\nexport const setItem = (key: string, data: ITodo[]) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TodoContext } from '../../../../utils/contexts/todo';\nimport { ITodo } from '../../../../utils/types/todo';\n\ninterface ITodoItem {\n  todo: ITodo;\n}\n\nconst TodoItem: React.FC<ITodoItem> = ({ todo }) => {\n  const { todos, setTodos } = useContext(TodoContext);\n\n  const onDragStart = (e: React.DragEvent<HTMLDivElement>) => {\n    e.dataTransfer.setData('todo', String(todo.id));\n  };\n\n  const onDeleteClick = (e: React.MouseEvent<HTMLImageElement>) => {\n    const newTodos = todos.filter(\n      (todo) => todo.id !== Number(e.currentTarget.id)\n    );\n    setTodos(newTodos);\n  };\n\n  return (\n    <Wrapper draggable onDragStart={onDragStart} id={String(todo.id)}>\n      <Task>{todo.task}</Task>\n      <DeleteIcon\n        id={String(todo.id)}\n        src=\"/img/delete.png\"\n        onClick={onDeleteClick}\n      />\n    </Wrapper>\n  );\n};\n\nexport default TodoItem;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 33px;\n  background-color: #ffffff;\n  border: 1px solid #00000020;\n  border-radius: 10px;\n  margin-bottom: 15px;\n  padding: 15px 30px;\n  cursor: pointer;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nconst Task = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst DeleteIcon = styled.img`\n  width: 30px;\n  cursor: pointer;\n`;\n","import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { STATUS } from '../../../utils/constants/todo';\nimport { TodoContext } from '../../../utils/contexts/todo';\nimport { ITodo } from '../../../utils/types/todo';\nimport TodoItem from './item/TodoItem';\n\ninterface ITodoCol {\n  title: string;\n  index: number;\n}\n\nconst TodoCol: React.FC<ITodoCol> = ({ title, index }) => {\n  const { todos, setTodos } = useContext(TodoContext);\n  const [focusedCol, setFocusedCol] = useState<string>('');\n\n  const onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setFocusedCol(e.currentTarget.id);\n  };\n\n  const onDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    setFocusedCol('');\n  };\n\n  const onDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    const id: string = e.dataTransfer.getData('todo');\n    const newTodo: ITodo = [...todos]\n      .filter((todo) => todo.id === Number(id))\n      .map((todo) => (todo = { ...todo, status: title }))[0];\n    const newTodos = todos.filter((todo) => todo.id !== newTodo.id);\n    setTodos([...newTodos, { ...newTodo }]);\n  };\n\n  useEffect(() => {\n    setFocusedCol('');\n  }, [todos]);\n\n  return (\n    <Wrapper\n      id={title}\n      onDragOver={onDragOver}\n      onDrop={onDrop}\n      onDragLeave={onDragLeave}\n      focusedCol={focusedCol}\n    >\n      <Header>{title}</Header>\n      <Body>\n        {index === 0 &&\n          todos\n            .filter((todo) => todo.status === STATUS.NOT_STARTED)\n            .map((todo) => <TodoItem key={todo.id} todo={todo} />)}\n        {index === 1 &&\n          todos\n            .filter((todo) => todo.status === STATUS.IN_PROGRESS)\n            .map((todo) => <TodoItem key={todo.id} todo={todo} />)}\n        {index === 2 &&\n          todos\n            .filter((todo) => todo.status === STATUS.DONE)\n            .map((todo) => <TodoItem key={todo.id} todo={todo} />)}\n      </Body>\n    </Wrapper>\n  );\n};\n\nexport default TodoCol;\n\nconst Wrapper = styled.div<{ focusedCol: string; id: string }>`\n  width: 400px;\n  background-color: #00000010;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  padding: 30px 20px;\n  opacity: ${({ focusedCol, id }) => (focusedCol === id ? 0.5 : 1)};\n`;\n\nconst Header = styled.header`\n  font-weight: bold;\n  font-size: 35px;\n  margin-bottom: 20px;\n`;\n\nconst Body = styled.main``;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { STATUS } from '../../utils/constants/todo';\nimport TodoCol from './col/TodoCol';\n\nconst TodoList: React.FC = () => {\n  return (\n    <TodoListWrapper>\n      {TodoListColArr.map((title, i) => (\n        <TodoCol key={title} title={title} index={i} />\n      ))}\n    </TodoListWrapper>\n  );\n};\n\nexport default TodoList;\n\nconst TodoListColArr = [STATUS.NOT_STARTED, STATUS.IN_PROGRESS, STATUS.DONE];\n\nconst TodoListWrapper = styled.main`\n  display: flex;\n  justify-content: space-between;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { LS_KEY } from '../utils/constants/localStorageKey';\nimport { TodoContext } from '../utils/contexts/todo';\nimport { getItem } from '../utils/localStorageService';\nimport { ITodo } from '../utils/types/todo';\nimport TodoHeader from './header/TodoHeader';\nimport TodoList from './list/TodoList';\n\nconst TodoContainer: React.FC = () => {\n  const [todo, setTodo] = useState<ITodo>({\n    id: 0,\n    task: '',\n    status: '',\n  });\n  const [todos, setTodos] = useState<ITodo[] | []>(getItem(LS_KEY));\n\n  return (\n    <TodoContext.Provider value={{ todo, setTodo, todos, setTodos }}>\n      <UpperWrapper>\n        <Wrapper>\n          <TodoHeader />\n          <TodoList />\n        </Wrapper>\n      </UpperWrapper>\n    </TodoContext.Provider>\n  );\n};\n\nexport default TodoContainer;\n\nconst UpperWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 1300px;\n  margin-top: 50px;\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;\n","import Layout from './components/layout/Layout';\nimport TodoContainer from './pages/TodoContainer';\nimport GlobalStyle from './utils/styles/globalStyles';\n\nconst App = () => {\n  return (\n    <Layout>\n      <GlobalStyle />\n      <TodoContainer />\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}